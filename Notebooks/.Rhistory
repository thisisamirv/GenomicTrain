setwd("~/Git/GenomicTrain/Notebooks")
1562428/4
library(parathyroidSE)
data(parathyroidGenesSE)
parathyroidGenesSE
colData(parathyroidGenesSE)
colnames(parathyroidGenesSE)
colData(parathyroidGenesSE)
rowData(parathyroidGenesSE)
rowData(parathyroidGenesSE)[1]
parathyroidGenesSE[1,]
pth <- parathyroidGenesSE
pth <- pth[, pth$time == "48h" & pth$treatment != "OHT"]
colData(pth)
library(DESeq2)
dds <- DESeqDataSet(pth, design = ~ patient + treatment)
dds_coll <- collapseReplicates(dds, groupby = dds$sample, run = dds$run)
dds_coll
colData(dds_coll)
dds_coll <- estimateSizeFactors(dds_coll)
dds_coll
dds_coll <- estimateSizeFactors(dds_coll)
colData(dds_coll)
rld <- rlog(dds_coll)
plotPCA(rld, intgroup = "patient")
dds_coll <- DESeq(dds_coll)
summary(dds_coll)
summary(dds_coll)
dds_coll
res_2 <- results(dds_coll)
summary(res_2)
which(res_2$padj == min(res_2$padj, na.rm = T), )
res_2[615]
dds_coll[615]
dim(res_2)
res_2[615,]
library(AnnotationDbi)
library(org.Hs.eg.db)
DESeq2::plotMA(res_2, ylim = c(-10, 10), colSig = "red")
res_4.thr <- results(dds_coll, lfcThreshold = 2)
DESeq2::plotMA(res_4.thr, ylim = c(-10, 10), colSig = "red")
res_4.thr <- results(dds_coll, lfcThreshold = -2)
DESeq2::plotMA(res_2, ylim = c(-10, 10), colSig = "red")
plotCounts(dds_coll, which.min(res_4$padj), intgroup = "patient")
plotCounts(dds_coll, which(min(res_4$padj)), intgroup = "patient")
plotCounts(dds_coll, which(min(res_2$padj)), intgroup = "patient")
which(min(res_2$padj))
which(min(res_2$padj), )
min(res_2$padj)
which(min(res_2$padj, na.rm = T), )
min(res_2$padj, na.rm = T)
which(min(res_2$padj, na.rm = T))
which(res_2$padj == min(res_2$padj, na.rm = T), )
plotCounts(dds_coll, which(res_2$padj == min(res_2$padj, na.rm = T),), intgroup = "patient")
which(res_2$padj == min(res_2$padj, na.rm = T),)
plotCounts(dds_coll, which(res_2$padj == min(res_2$padj, na.rm = T),)[1], intgroup = "patient")
plotCounts(dds_coll, which(res_2$padj == min(res_2$padj, na.rm = T),)[1], intgroup = "treatment")
plotCounts(dds_coll, which(res_2$padj == min(res_2$padj, na.rm = T),)[1], intgroup = c("treatment", "patient"))
plotCounts(dds_coll, which(res_2$padj == min(res_2$padj, na.rm = T),)[1], intgroup = "treatment", col = colData(dds_coll)$patient)
plotCounts(dds_coll, which(res_2$padj == min(res_2$padj, na.rm = T),)[1], intgroup = "treatment", col = c("green", "blue", "red", "black"))
rm(list=(ls))
rm(list=ls())
library(BSgenome.Hsapiens.UCSC.hg19)
chr22 <- Hsapiens[["chr22"]]
s <- subseq(chr22,start=23456789,width=1000)
rint( as.character(s) )
print( as.character(s) )
table(as.character(s))
grep("G", s)
grep("G", as.character(s))
grep(G, as.character(s))
grep("*G*", as.character(s))
?grep
gregexpr("G", as.character(s))
length(s)
s
gregexpr("G", as.character(s))[1]
gregexpr("G", as.character(s))[2]
gregexpr("G", as.character(s))[1]
gregexpr("G", as.character(s))[[1]]
gregexpr("G", as.character(s))[[[1]]]
gregexpr("G", as.character(s))[[1]][1]
gregexpr("C", as.character(s))
331 + 196 + 56
letterFrequency(s, "G")
letterFrequency(s, "C")
331 + 252
583/1000
countPattern("CG", s)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
rm(list = ls())
library(BSgenome.Hsapiens.UCSC.hg19)
chr22 <- Hsapiens[["chr22"]]
s <- subseq(chr22, start = 23456789, width = 1000)
s
library(BSgenome.Hsapiens.UCSC.hg19)
chr22 <- Hsapiens[["chr22"]]
s <- subseq(chr22, start = 23456789, width = 1000)
s
# Count CpG segments
countPattern("CG", s)
countPattern("GC", s)
library(AnnotationHub)
ah <- AnnotationHub()
ah <- AnnotationHub()
ah <- AnnotationHub()
ah <- AnnotationHub()
head(ah)
ah <- subset(ah,ah$genome=="hg19")
query(ah,"genes")
query(ah)
query(ah,"cpg")
query(AnnotationHub(),"cpg")
cgi <- ah[[AH5086]]
query(AnnotationHub(),"AH5086")
query(ah,"AH5086")
cgi <- ah[["AH5086"]]
cgi <- ah[["AH5086"]]
class(cgi)
cgi
library(BSgenome.Hsapiens.UCSC.hg19)
cgiseq <- getSeq(Hsapiens, cgi)
genome(cgi)[1:24]
genome(Hsapiens)[1:24]
cgiseq
l = 0
for (i in 1:length(cgiseq)){m = letterFrequency("C", cgiseq[i])}
for (i in 1:length(cgiseq)) {
m = letterFrequency("C", cgiseq[i])
l = l + m
}
letterFrequency("C", cgiseq[1])
letterFrequency("C", as.character(cgiseq[1]))
cgiseq[1]
letterFrequency(C, cgiseq[1])
letterFrequency(cgiseq[1], "C")
for (i in 1:length(cgiseq)) {
m = letterFrequency(cgiseq[i], "C")
l = l + m
}
l = data.frame()
length(cgiseq[1])
width(cgiseq[1])
for (i in 1:2) {
m = letterFrequency(cgiseq[i], "C")
n = m / width(cgiseq[i])
l[i] = m
}
for (i in 1:2) {
m = letterFrequency(cgiseq[i], "C")
n = m / width(cgiseq[i])
l = rbin(n, l)
}
for (i in 1:2) {
m = letterFrequency(cgiseq[i], "C")
n = m / width(cgiseq[i])
l = rbind(n, l)
}
l
l = data.frame()
for (i in 1:length(cgiseq)) {
m = letterFrequency(cgiseq[i], "C")
n = m / width(cgiseq[i])
l = rbind(n, l)
}
median (l)
median(l)
l
vector(l)
matrix(l)
l = c()
for (i in 1:length(cgiseq)) {
m = letterFrequency(cgiseq[i], "C")
n = m / width(cgiseq[i])
l = c(l, n)
}
l
length(l)
l <- rnorm(length(cgiseq), mean = 0, sd = 1)
for (i in 1:length(cgiseq)) {
m = letterFrequency(cgiseq[i], "C")
n = m / width(cgiseq[i])
l[i] = n
}
l
median(l)
letterFrequency(cgiseq, "C", as.prob=TRUE)
f <- letterFrequency(cgiseq, "G", as.prob=TRUE)
median(f)
vcountPattern(cgiseq, "CG", as.prob=TRUE)
vcountPattern(cgiseq, "CG")
vcountPattern("CG", cgiseq)
Cs <- letterFrequency(cgiseq, "C", as.prob=TRUE)
Gs <- letterFrequency(cgiseq, "G", as.prob=TRUE)
Cs * Gs
length(cgiseq)
length(cgiseq[1])
width(cgiseq)
sum(width(cgiseq))
Exp <- Cs * Gs * sum(width(cgiseq))
Exp
Exp <- Cs * Gs * width(cgiseq)
Exp
vcountPattern("CG", cgiseq)
median(Exp / Obs)
Obs <- vcountPattern("CG", cgiseq)
median(Exp / Obs)
Exp <- Cs * Gs * width(cgiseq)
Obs <- vcountPattern("CG", cgiseq)
median(Exp / Obs)
d <- Exp / Obs
median(d)
letterFrequency(cgiseq, "C", as.prob=TRUE)
letterFrequency(cgiseq, "C")
letterFrequency(cgiseq, "C", as.prob=TRUE)
width(cgiseq)
vcountPattern("CG", cgiseq)
width(cgiseq)
Exp
Obs
Exp
?vcountPattern
dim(Exp)
dim(Obs)
Obs
d <- vector(Obs)
class(Obs)
class(Exp)
d <- array(Obs)
d
class(d)
class(Exp)
Exp <- array(Cs * Gs * width(cgiseq))
class(Exp)
Exp
Obs <- array(vcountPattern("CG", cgiseq))
Obs
median(Exp / Obs)
median(width(cgiseq))
559 * 0.342723 * 0.3418675
median(obs)
median(Obs)
65.49571 / 54
median(Obs / Exp)
Obs <- array(vcountPattern("GC", cgiseq))
median(Obs / Exp)
chr2use <- seqlevels(cgi)[1:24]
index = which( seqnames(cgi) %in% chr2use)
noncgi <- shift(cgi[index],20000)
library(BSgenome.Hsapiens.UCSC.hg19)
noncgiseq <- getSeq(Hsapiens,noncgi)
nullres <- alphabetFrequency(noncgiseq)
keepIndex <- nullres[,"G"]>0 &  nullres[,"C"]>0 & nullres[,"N"]==0
nullres <- nullres[keepIndex,]
noncgiseq <- noncgiseq[keepIndex]
Cs <- letterFrequency(noncgiseq, "C", as.prob=TRUE)
Gs <- letterFrequency(noncgiseq, "G", as.prob=TRUE)
Exp <- array(Cs * Gs * width(noncgiseq))
Obs <- array(vcountPattern("CG", noncgiseq))
median(Obs / Exp)
