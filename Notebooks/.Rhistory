setwd("~/Git/GenomicTrain/Notebooks")
BiocManager::install()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
rm(list = ls())
head Data/ortedAlignedRNA.bam
install.packages(c("foreign", "nnet"))
BiocManager::install()
library(pasillaBamSubset)
library(TxDb.Dmelanogaster.UCSC.dm3.ensGene)
BiocManager::install("TxDb.Dmelanogaster.UCSC.dm3.ensGene")
library(pasillaBamSubset)
bam.file_2 <- untreated3_chr4()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
rm(list = ls())
library(pasillaBamSubset)
bam.file <- untreated3_chr4()
bam.file
library(Rsamtools)
bf <- BamFile(bam.file)
library(TxDb.Dmelanogaster.UCSC.dm3.ensGene)
txdb_2 <- TxDb.Dmelanogaster.UCSC.dm3.ensGene
library(Rsamtools)
bf <- BamFile(bam.file)
library(TxDb.Dmelanogaster.UCSC.dm3.ensGene)
txdb_2 <- TxDb.Dmelanogaster.UCSC.dm3.ensGene
# Make a GRangesList which contains the exons for each gene.
exons.by.gene_2 <- exonsBy(txdb_2, by = "gene")
library(Rsamtools)
bf <- BamFile(bam.file)
library(TxDb.Dmelanogaster.UCSC.dm3.ensGene)
txdb_2 <- TxDb.Dmelanogaster.UCSC.dm3.ensGene
# Make a GRangesList which contains the exons for each gene.
exons.by.gene_2 <- exonsBy(txdb_2, by = "gene")
# Take a peak
for (i in 1:3) {
print(exons.by.gene_2[[i]][1:3])
}
exons.by.gene_2
dim(exons.by.gene_2)
library(Rsamtools)
bf <- BamFile(bam.file)
library(TxDb.Dmelanogaster.UCSC.dm3.ensGene)
txdb_2 <- TxDb.Dmelanogaster.UCSC.dm3.ensGene
# Make a GRangesList which contains the exons for each gene.
exons.by.gene_2 <- exonsBy(txdb_2, by = "gene")
# Take a peak
for (i in 1:2) {
print(exons.by.gene_2[[i]][1:3])
}
exons.by.gene_2[[1]]
exons.by.gene_2[[2]]
library(Rsamtools)
bf <- BamFile(bam.file)
library(TxDb.Dmelanogaster.UCSC.dm3.ensGene)
txdb_2 <- TxDb.Dmelanogaster.UCSC.dm3.ensGene
# Make a GRangesList which contains the exons for each gene.
exons.by.gene_2 <- exonsBy(txdb_2, by = "gene")
# Take a peak
for (i in 1:2) {
print(exons.by.gene_2[[i]][1])
}
library(Rsamtools)
bf <- BamFile(bam.file)
library(TxDb.Dmelanogaster.UCSC.dm3.ensGene)
txdb_2 <- TxDb.Dmelanogaster.UCSC.dm3.ensGene
# Make a GRangesList which contains the exons for each gene.
ebg <- exonsBy(txdb_2, by = "gene")
# Take a peak
for (i in 1:2) {
print(ebg[[i]][1])
}
chr4.idx <- all(seqnames(ebg) == "chr4")
ebg.sub <- ebg[chr4.idx]
ebg.sub
# Create a SummarizedExperiment containing the counts for the reads in each
# BAM file (columns) for each gene in `exons.by.gene` (the rows).
library(GenomicAlignments)
se_2 <-
summarizeOverlaps(
ebg.sub,
bam.list,
mode = "Union",
singleEnd = FALSE,
ignore.strand = TRUE,
fragments = FALSE
)
# Create a SummarizedExperiment containing the counts for the reads in each
# BAM file (columns) for each gene in `exons.by.gene` (the rows).
library(GenomicAlignments)
se_2 <-
summarizeOverlaps(
ebg.sub,
bam.file,
mode = "Union",
singleEnd = FALSE,
ignore.strand = TRUE,
fragments = FALSE
)
se_2
se_2[[1]]
se_2[1]
assay(se_2)
assay(se_2)[1:5]
dim(assay(se_2))
assay(se_2)[1:5, 1]
assay(se_2)$FBgn0002521
assay(se_2)[1, 1]
assay(se_2)[1:2, 1]
library(BiocParallel)
gc()
